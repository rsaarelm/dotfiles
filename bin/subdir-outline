#!/usr/bin/env python3

# Generate a vimoutliner file from a directory of text files.
# Useful for creating a quick note-taking template from a code base.
import mimetypes
import os
import os.path
import re
import subprocess
import sys

def istext(path):
    return (re.search(r':.* text',
        subprocess.Popen(['file', '-L', path], 
            stdout=subprocess.PIPE).stdout.read().decode('utf-8'))
        is not None)

seen = set()
for (dirpath, dirnames, filenames) in os.walk('.'):
    if "/.git/" in dirpath:
        continue

    if not dirpath in seen:
        seen.add(dirpath)
        depth = dirpath.count('/') - 1
        print('%s%s' % ('\t' * depth, dirpath[2:]))
    for filename in sorted(filenames):
        path = os.path.join(dirpath, filename)
        if not istext(path):
            continue
        depth = path.count('/') - 1


        text = subprocess.Popen(['nl', '-b', 'a', path],
            stdout=subprocess.PIPE).stdout.read()
        try:
            text = text.decode('utf-8')
        except:
            try:
                text = text.decode('ascii')
            except:
                continue
        lines = list(text.splitlines())
        print('%s%s' % ('\t' * depth, path[2:]))
        if len(lines) > 1023 or (lines and len(lines[0]) > 1023):
            print('%s (Omitted long file)' % ('\t' * (depth+1)))
        else:
            for line in lines:
                print('%s;%s' % ('\t' * (depth+1), line))
