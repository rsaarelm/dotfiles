#!/usr/bin/env python3

# Compute cumulative function of standard normal distribution.

import math
import sys

def erf(x):
    """Approximate the error function using a numerical method."""
    # From https://stackoverflow.com/a/457805

    # Constants for the approximation
    a1 =  0.254829592
    a2 = -0.284496736
    a3 =  1.421413741
    a4 = -1.453152027
    a5 =  1.061405429
    p  =  0.3275911

    # Save the sign of x
    sign = 1 if x >= 0 else -1
    x = abs(x) / math.sqrt(2.0)

    # A&S formula 7.1.26
    t = 1.0 / (1.0 + p * x)
    y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * math.exp(-x * x)

    return sign * y

def standard_normal_cdf(x):
    return 0.5 * (1 + erf(x / math.sqrt(2)))

if __name__ == "__main__":
    if len(sys.argv) > 1:
        x = float(sys.argv[1])
    else:
        x = float(sys.stdin.read().strip())
    print(standard_normal_cdf(x))
