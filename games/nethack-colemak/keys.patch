diff --git a/src/cmd.c b/src/cmd.c
index 148f63ca..8db48716 100644
--- a/src/cmd.c
+++ b/src/cmd.c
@@ -3286,10 +3286,10 @@ struct ext_func_tab extcmdlist[] = {
     { M('C'), "conduct", "list voluntary challenges you have maintained",
             doconduct, IFBURIED | AUTOCOMPLETE },
     { M('d'), "dip", "dip an object into something", dodip, AUTOCOMPLETE },
-    { '>', "down", "go down a staircase", dodown },
+    { 'j', "down", "go down a staircase", dodown },
     { 'd', "drop", "drop an item", dodrop },
     { 'D', "droptype", "drop specific item types", doddrop },
-    { 'e', "eat", "eat something", doeat },
+    { 'B', "eat", "eat something", doeat },
     { 'E', "engrave", "engrave writing on the floor", doengrave },
     { M('e'), "enhance", "advance or check weapon and spell skills",
             enhance_weapon_skill, IFBURIED | AUTOCOMPLETE },
@@ -3304,8 +3304,8 @@ struct ext_func_tab extcmdlist[] = {
             doherecmdmenu, IFBURIED },
     { 'V', "history", "show long version and game history",
             dohistory, IFBURIED | GENERALCMD },
-    { 'i', "inventory", "show your inventory", ddoinv, IFBURIED },
-    { 'I', "inventtype", "inventory specific item types",
+    { 'h', "inventory", "show your inventory", ddoinv, IFBURIED },
+    { 'H', "inventtype", "inventory specific item types",
             dotypeinv, IFBURIED },
     { M('i'), "invoke", "invoke an object's special powers",
             doinvoke, IFBURIED | AUTOCOMPLETE },
@@ -3339,7 +3339,7 @@ struct ext_func_tab extcmdlist[] = {
     { '\0', "panic", "test panic routine (fatal to game)",
             wiz_panic, IFBURIED | AUTOCOMPLETE | WIZMODECMD },
     { 'p', "pay", "pay your shopping bill", dopay },
-    { ',', "pickup", "pick up things at the current location", dopickup },
+    { 'b', "pickup", "pick up things at the current location", dopickup },
     { '\0', "polyself", "polymorph self",
             wiz_polyself, IFBURIED | AUTOCOMPLETE | WIZMODECMD },
     { M('p'), "pray", "pray to the gods for help",
@@ -3410,7 +3410,7 @@ struct ext_func_tab extcmdlist[] = {
     { 'X', "twoweapon", "toggle two-weapon combat",
             dotwoweapon, AUTOCOMPLETE },
     { M('u'), "untrap", "untrap something", dountrap, AUTOCOMPLETE },
-    { '<', "up", "go up a staircase", doup },
+    { 'J', "up", "go up a staircase", doup },
     { '\0', "vanquished", "list vanquished monsters",
             dovanquished, IFBURIED | AUTOCOMPLETE | WIZMODECMD },
     { M('v'), "version",
@@ -3419,7 +3419,7 @@ struct ext_func_tab extcmdlist[] = {
     { 'v', "versionshort", "show version", doversion, IFBURIED | GENERALCMD },
     { '\0', "vision", "show vision array",
             wiz_show_vision, IFBURIED | AUTOCOMPLETE | WIZMODECMD },
-    { '.', "wait", "rest one move while doing nothing",
+    { 'e', "wait", "rest one move while doing nothing",
             donull, IFBURIED, "waiting" },
     { 'W', "wear", "wear a piece of armor", dowear },
     { '&', "whatdoes", "tell what a command does", dowhatdoes, IFBURIED },
@@ -3510,7 +3510,7 @@ commands_init()
     for (extcmd = extcmdlist; extcmd->ef_txt; extcmd++)
         if (extcmd->key)
             Cmd.commands[extcmd->key] = extcmd;
-
+#if 0
     (void) bind_key(C('l'), "redraw"); /* if number_pad is set */
     /*       'b', 'B' : go sw */
     /*       'F' : fight (one time) */
@@ -3525,6 +3525,7 @@ commands_init()
     (void) bind_key(M('n'), "name");
     (void) bind_key(M('N'), "name");
     (void) bind_key('u',    "untrap"); /* if number_pad is on */
+#endif

     /* alt keys: */
     (void) bind_key(M('O'), "overview");
@@ -4153,19 +4154,19 @@ struct {
     { NHKF_RUSH,             'g', "rush" },
     { NHKF_FIGHT,            'F', "fight" },
     { NHKF_FIGHT2,           '-', "fight.numpad" },
-    { NHKF_NOPICKUP,         'm', "nopickup" },
-    { NHKF_RUN_NOPICKUP,     'M', "run.nopickup" },
+    { NHKF_NOPICKUP,         'k', "nopickup" },
+    { NHKF_RUN_NOPICKUP,     'K', "run.nopickup" },
     { NHKF_DOINV,            '0', "doinv" },
     { NHKF_TRAVEL,           CMD_TRAVEL, (char *) 0 }, /* no binding */
     { NHKF_CLICKLOOK,        CMD_CLICKLOOK, (char *) 0 }, /* no binding */
     { NHKF_REDRAW,           C('r'), "redraw" },
     { NHKF_REDRAW2,          C('l'), "redraw.numpad" },
-    { NHKF_GETDIR_SELF,      '.', "getdir.self" },
+    { NHKF_GETDIR_SELF,      'e', "getdir.self" },
     { NHKF_GETDIR_SELF2,     's', "getdir.self2" },
     { NHKF_GETDIR_HELP,      '?', "getdir.help" },
     { NHKF_COUNT,            'n', "count" },
     { NHKF_GETPOS_SELF,      '@', "getpos.self" },
-    { NHKF_GETPOS_PICK,      '.', "getpos.pick" },
+    { NHKF_GETPOS_PICK,      'e', "getpos.pick" },
     { NHKF_GETPOS_PICK_Q,    ',', "getpos.pick.quick" },
     { NHKF_GETPOS_PICK_O,    ';', "getpos.pick.once" },
     { NHKF_GETPOS_PICK_V,    ':', "getpos.pick.verbose" },
@@ -4338,7 +4339,7 @@ void
 reset_commands(initial)
 boolean initial;
 {
-    static const char sdir[] = "hykulnjb><",
+    static const char sdir[] = "nluyi.,mo;",
                       sdir_swap_yz[] = "hzkulnjb><",
                       ndir[] = "47896321><",
                       ndir_phone_layout[] = "41236987><";
@@ -4534,6 +4535,14 @@ int start,end;
     return NHKF_ESC;
 }

+char movelowc(char c) {
+    switch (c) {
+        case '<': return ',';
+        case '>': return '.';
+        default: return lowc(c);
+    }
+}
+
 void
 rhack(cmd)
 register char *cmd;
@@ -4587,7 +4596,7 @@ register char *cmd;
             break;
         /*FALLTHRU*/
     case NHKF_RUN:
-        if (movecmd(lowc(cmd[1]))) {
+        if (movecmd(movelowc(cmd[1]))) {
             context.run = 3;
             domove_attempting |= DOMOVE_RUSH;
         } else
@@ -4621,7 +4630,7 @@ register char *cmd;
             prefix_seen = TRUE;
         break;
     case NHKF_RUN_NOPICKUP:
-        if (movecmd(lowc(cmd[1]))) {
+        if (movecmd(movelowc(cmd[1]))) {
             context.run = 1;
             context.nopick = 1;
             domove_attempting |= DOMOVE_RUSH;
@@ -4655,7 +4664,7 @@ register char *cmd;
         if (movecmd(*cmd)) { /* ordinary movement */
             context.run = 0; /* only matters here if it was 8 */
             domove_attempting |= DOMOVE_WALK;
-        } else if (movecmd(Cmd.num_pad ? unmeta(*cmd) : lowc(*cmd))) {
+        } else if (movecmd(Cmd.num_pad ? unmeta(*cmd) : movelowc(*cmd))) {
             context.run = 1;
             domove_attempting |= DOMOVE_RUSH;
         } else if (movecmd(unctrl(*cmd))) {
